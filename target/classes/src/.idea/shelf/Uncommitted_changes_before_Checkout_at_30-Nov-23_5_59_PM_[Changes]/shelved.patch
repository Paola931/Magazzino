Index: Magazzino.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package src;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\nimport java.util.Scanner;\r\n\r\npublic class Magazzino {\r\n    public ArrayList<Prodotto> getListaMagazzino() {\r\n        return listaMagazzino;\r\n    }\r\n\r\n    public void setListaMagazzino(ArrayList<Prodotto> listaMagazzino) {\r\n        this.listaMagazzino = listaMagazzino;\r\n    }\r\n\r\n    public Scanner getIn() {\r\n        return in;\r\n    }\r\n\r\n    private ArrayList<Prodotto> listaMagazzino;\r\n    private final Scanner in;\r\n\r\n    public Magazzino(ArrayList<Prodotto> listaMagazzino, Scanner in) {\r\n        this.listaMagazzino = listaMagazzino;\r\n        this.in = in;\r\n    }\r\n\r\n    public String aggiungiAMagazzino(Prodotto prodotto) {\r\n        this.listaMagazzino.add(prodotto);\r\n        return \"Il prodotto \" + prodotto + \" è stato aggiunto correttamente al magazzino\\n\";\r\n    }\r\n\r\n    public ArrayList<Prodotto> ricercaDispositivo() {\r\n        System.out.println(\"Seleziona in che modo vuoi ricercare:\");\r\n        System.out.println(\"0 = esci dalla funzione di ricerca\");\r\n        System.out.println(\"1 = per tipo\");\r\n        System.out.println(\"2 = per produttore\");\r\n        System.out.println(\"3 = per modello\");\r\n        System.out.println(\"4 = per prezzo di vendita\");\r\n        System.out.println(\"5 = per prezzo di acquisto\");\r\n        System.out.println(\"6 = ricerca specifica per range di prezzo\");\r\n        System.out.println();\r\n        String input = in.nextLine();\r\n        while (true) {\r\n            try {\r\n                int inputInt = Integer.parseInt(input);\r\n                if (inputInt >= 0 && inputInt <= 6) {\r\n                    break;\r\n                }\r\n                System.out.println();\r\n                System.out.println(\"Valore non supportato: \" + input);\r\n                System.out.println();\r\n                System.out.println(\"Seleziona in che modo vuoi ricercare:\");\r\n                System.out.println(\"0 = esci dalla funzione di ricerca\");\r\n                System.out.println(\"1 = per tipo\");\r\n                System.out.println(\"2 = per produttore\");\r\n                System.out.println(\"3 = per modello\");\r\n                System.out.println(\"4 = per prezzo di vendita\");\r\n                System.out.println(\"5 = per prezzo di acquisto\");\r\n                System.out.println(\"6 = ricerca specifica per range di prezzo\");\r\n                System.out.println();\r\n                input = in.nextLine();\r\n            } catch (NumberFormatException nfe) {\r\n                System.out.println();\r\n                System.out.println(\"Valore non supportato: \" + input);\r\n                System.out.println();\r\n                System.out.println(\"Seleziona in che modo vuoi ricercare:\");\r\n                System.out.println(\"0 = esci dalla funzione di ricerca\");\r\n                System.out.println(\"1 = per tipo\");\r\n                System.out.println(\"2 = per produttore\");\r\n                System.out.println(\"3 = per modello\");\r\n                System.out.println(\"4 = per prezzo di vendita\");\r\n                System.out.println(\"5 = per prezzo di acquisto\");\r\n                System.out.println(\"6 = ricerca specifica per range di prezzo\");\r\n                System.out.println();\r\n                input = in.nextLine();\r\n            }\r\n        }\r\n        System.out.println();\r\n        switch (input) {\r\n            case \"0\":\r\n                System.out.println(\"Grazie per averci scelto, arrivederci!\");\r\n                break;\r\n            case \"1\":\r\n               // return ricercaTipo(in);\r\n            case \"2\":\r\n               return ricercaProduttore(in);\r\n            case \"3\":\r\n                System.out.println(\"Inserisci modello: \");\r\n                String modello = in.nextLine();\r\n                return ricercaModello(modello, listaMagazzino);\r\n   case \"4\":\r\n//                return ricercaPrezzoVendita(this.in, this.listaMagazzino);\r\n                break;\r\n            case \"5\":\r\n//                return ricercaPrezzoAcquisto(this.in, this.listaMagazzino);\r\n                break;\r\n            case \"6\":\r\n               return ricercaRangePrezzo(in);\r\n            default:\r\n                System.out.println(\"Valore non supportato: \" + input);\r\n                System.out.println();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public ArrayList<Prodotto> ricercaModello(String modello, ArrayList<Prodotto> listaMagazzino) {\r\n        ArrayList<Prodotto> list = new ArrayList<Prodotto>();\r\n        for (int i = 0; i < listaMagazzino.size(); i++) {\r\n            if (modello.equalsIgnoreCase(listaMagazzino.get(i).getModel())) {\r\n                listaMagazzino.add(modello);\r\n            }\r\n        }\r\n       \r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Magazzino{\" +\r\n                \"listaMagazzino=\" + listaMagazzino +\r\n                '}';\r\n    }\r\n\r\n    public void printMagazzino(ArrayList<Prodotto> magazzino) {\r\n        magazzino.forEach(System.out::println);\r\n        System.out.println();\r\n    }\r\n    public Prodotto verificaDisponibilitaId(String input1){\r\n        for (Prodotto prodotto : this.listaMagazzino) {\r\n            if (Objects.equals(String.valueOf(prodotto.getId()), input1)) {\r\n                return prodotto;\r\n            }\r\n        }\r\n        throw new NullPointerException(\"Non è presente nessun prodotto con l'ID \" + input1 + \" all'interno del magazzino \\n\");\r\n    }\r\n    public String rimuoviProdottoMagazzino(Prodotto prodotto){\r\n        this.listaMagazzino.remove(prodotto);\r\n        return \"Il prodotto \" + prodotto + \" è stato rimosso correttamente dal magazzino \\n\";\r\n    }\r\n    public String ricercaTipo(Scanner in) {\r\n        System.out.println(\"Inserisci il numero corrispondente al tipo di dispostitivo che vuoi ricercare:\");\r\n        System.out.println(\"0 = Torna al menù precendente\");\r\n        System.out.println(\"1 = Smartphone\");\r\n        System.out.println(\"2 = Tablet\");\r\n        System.out.println(\"3 = Notebook\");\r\n        Integer input = in.nextInt();\r\n        while (input != 0) {\r\n\r\n            switch (input) {\r\n                case 0:\r\n                    System.out.println(\"Stai per tornare al menù precedente\");\r\n                    break;\r\n                case 1:\r\n                    System.out.println(\"Questi sono gli Smartphone disponibili: \");\r\n                    for (Prodotto prodotto : this.listaMagazzino) {\r\n                        if(prodotto.getTipoProdotto() == TipoProdotto.SMARTPHONE) {\r\n                            System.out.println(prodotto);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    System.out.println(\"Questi sono i Tablet disponibili: \");\r\n                    for (Prodotto prodotto : this.listaMagazzino) {\r\n                        if(prodotto.getTipoProdotto() == TipoProdotto.TABLET) {\r\n                            System.out.println(prodotto);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    System.out.println(\"Questi sono i Notebook disponibili: \");\r\n                    for (Prodotto prodotto : this.listaMagazzino) {\r\n                        if(prodotto.getTipoProdotto() == TipoProdotto.NOTEBOOK) {\r\n                            System.out.println(prodotto);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n            System.out.println(\"Inserisci il numero corrispondente al tipo di dispositivo che vuoi ricercare:\");\r\n            System.out.println(\"0 = Torna al menù precendente\");\r\n            System.out.println(\"1 = Smartphone\");\r\n            System.out.println(\"2 = Tablet\");\r\n            System.out.println(\"3 = Notebook\");\r\n            input = in.nextInt();\r\n        }\r\n        return null;\r\n    }\r\n    public String ricercaProduttore(Scanner in) {\r\n        System.out.println(\"Inserisci il numero corrispondente al tipo di produttore che vuoi ricercare:\");\r\n        System.out.println(\"0 = Esci dal programma\");\r\n        System.out.println(\"1 = Samsung\");\r\n        System.out.println(\"2 = Apple\");\r\n        Integer input = in.nextInt();\r\n        while (!input.equals(0)) {\r\n\r\n            switch (input) {\r\n                case 0:\r\n                    System.out.println(\"Stai per tornare al menù precedente\");\r\n                    break;\r\n                case 1:\r\n                    System.out.println(\"Questi sono i dispositivi disponibili per produttore Samsung: \");\r\n                    for (Prodotto prodotto : this.listaMagazzino) {\r\n                        if(prodotto.getProduttore() == ProduttoreProdotto.SAMSUNG){\r\n                            System.out.println(prodotto);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    System.out.println(\"Questi sono i dispositivi disponibili per produttore Apple: \");\r\n                    for (Prodotto prodotto : this.listaMagazzino) {\r\n                        if(prodotto.getProduttore() == ProduttoreProdotto.APPLE){\r\n                            System.out.println(prodotto);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n            System.out.println(\"Inserisci il numero corrispondente al tipo di produttore che vuoi ricercare:\");\r\n            System.out.println(\"0 = Esci dal programma\");\r\n            System.out.println(\"1 = Samsung\");\r\n            System.out.println(\"2 = Apple\");\r\n            input = in.nextInt();\r\n        }\r\n        return null;\r\n    }\r\n    public String ricercaRangePrezzo(Scanner in) {\r\n        System.out.println(\"Inserisci il numero corrispondente alla scelta che vuoi effettuare: \");\r\n        System.out.println(\"0 = Esci dal programma\");\r\n        System.out.println(\"1 = Continua con la ricerca\");\r\n        Integer input = in.nextInt();\r\n        while (!input.equals(0)) {\r\n\r\n            switch (input) {\r\n                case 0:\r\n                    System.out.println(\"Stai per tornare al menù precedente\");\r\n                    break;\r\n                case 1:\r\n                    System.out.print(\"Inserisci il prezzo minimo (es.5,00) : \");\r\n                    double prezzoMin = in.nextDouble();\r\n\r\n                    System.out.print(\"Inserisci il prezzo massimo (es.50,00) : \");\r\n                    double prezzoMax = in.nextDouble();\r\n\r\n\r\n                    System.out.println(\"Questi sono i dispositivi disponibili per il range di prezzo che hai impostato: \");\r\n                    for (Prodotto prodotto : this.listaMagazzino) {\r\n                        if (prodotto.getPriceSell() >= prezzoMin && prodotto.getPriceSell() <= prezzoMax) {\r\n                            System.out.println(prodotto);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n            System.out.println(\"Inserisci il numero corrispondente alla scelta che vuoi effettuare: \");\r\n            System.out.println(\"0 = Esci dal programma\");\r\n            System.out.println(\"1 = Effettua una nuova ricerca per range di prezzo\");\r\n            input = in.nextInt();\r\n        }\r\n        return null;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Magazzino.java b/Magazzino.java
--- a/Magazzino.java	
+++ b/Magazzino.java	
@@ -82,21 +82,21 @@
                 System.out.println("Grazie per averci scelto, arrivederci!");
                 break;
             case "1":
-               // return ricercaTipo(in);
+                // return ricercaTipo(in);
             case "2":
-               return ricercaProduttore(in);
+                return ricercaProduttore(in);
             case "3":
                 System.out.println("Inserisci modello: ");
                 String modello = in.nextLine();
                 return ricercaModello(modello, listaMagazzino);
-   case "4":
+            case "4":
 //                return ricercaPrezzoVendita(this.in, this.listaMagazzino);
                 break;
             case "5":
 //                return ricercaPrezzoAcquisto(this.in, this.listaMagazzino);
                 break;
             case "6":
-               return ricercaRangePrezzo(in);
+                return ricercaRangePrezzo(in);
             default:
                 System.out.println("Valore non supportato: " + input);
                 System.out.println();
@@ -111,147 +111,147 @@
                 listaMagazzino.add(modello);
             }
         }
-       
+
 
-    @Override
-    public String toString() {
-        return "Magazzino{" +
-                "listaMagazzino=" + listaMagazzino +
-                '}';
-    }
+        @Override
+        public String toString () {
+            return "Magazzino{" +
+                    "listaMagazzino=" + listaMagazzino +
+                    '}';
+        }
 
-    public void printMagazzino(ArrayList<Prodotto> magazzino) {
-        magazzino.forEach(System.out::println);
-        System.out.println();
-    }
-    public Prodotto verificaDisponibilitaId(String input1){
-        for (Prodotto prodotto : this.listaMagazzino) {
-            if (Objects.equals(String.valueOf(prodotto.getId()), input1)) {
-                return prodotto;
-            }
-        }
-        throw new NullPointerException("Non è presente nessun prodotto con l'ID " + input1 + " all'interno del magazzino \n");
-    }
-    public String rimuoviProdottoMagazzino(Prodotto prodotto){
-        this.listaMagazzino.remove(prodotto);
-        return "Il prodotto " + prodotto + " è stato rimosso correttamente dal magazzino \n";
-    }
-    public String ricercaTipo(Scanner in) {
-        System.out.println("Inserisci il numero corrispondente al tipo di dispostitivo che vuoi ricercare:");
-        System.out.println("0 = Torna al menù precendente");
-        System.out.println("1 = Smartphone");
-        System.out.println("2 = Tablet");
-        System.out.println("3 = Notebook");
-        Integer input = in.nextInt();
-        while (input != 0) {
+        public void printMagazzino (ArrayList < Prodotto > magazzino) {
+            magazzino.forEach(System.out::println);
+            System.out.println();
+        }
+        public Prodotto verificaDisponibilitaId (String input1){
+            for (Prodotto prodotto : this.listaMagazzino) {
+                if (Objects.equals(String.valueOf(prodotto.getId()), input1)) {
+                    return prodotto;
+                }
+            }
+            throw new NullPointerException("Non è presente nessun prodotto con l'ID " + input1 + " all'interno del magazzino \n");
+        }
+        public String rimuoviProdottoMagazzino (Prodotto prodotto){
+            this.listaMagazzino.remove(prodotto);
+            return "Il prodotto " + prodotto + " è stato rimosso correttamente dal magazzino \n";
+        }
+        public String ricercaTipo (Scanner in){
+            System.out.println("Inserisci il numero corrispondente al tipo di dispostitivo che vuoi ricercare:");
+            System.out.println("0 = Torna al menù precendente");
+            System.out.println("1 = Smartphone");
+            System.out.println("2 = Tablet");
+            System.out.println("3 = Notebook");
+            Integer input = in.nextInt();
+            while (input != 0) {
 
-            switch (input) {
-                case 0:
-                    System.out.println("Stai per tornare al menù precedente");
-                    break;
-                case 1:
-                    System.out.println("Questi sono gli Smartphone disponibili: ");
-                    for (Prodotto prodotto : this.listaMagazzino) {
-                        if(prodotto.getTipoProdotto() == TipoProdotto.SMARTPHONE) {
-                            System.out.println(prodotto);
-                        }
-                    }
-                    break;
-                case 2:
-                    System.out.println("Questi sono i Tablet disponibili: ");
-                    for (Prodotto prodotto : this.listaMagazzino) {
-                        if(prodotto.getTipoProdotto() == TipoProdotto.TABLET) {
-                            System.out.println(prodotto);
-                        }
-                    }
-                    break;
-                case 3:
-                    System.out.println("Questi sono i Notebook disponibili: ");
-                    for (Prodotto prodotto : this.listaMagazzino) {
-                        if(prodotto.getTipoProdotto() == TipoProdotto.NOTEBOOK) {
-                            System.out.println(prodotto);
-                        }
-                    }
-                    break;
-            }
-            System.out.println("Inserisci il numero corrispondente al tipo di dispositivo che vuoi ricercare:");
-            System.out.println("0 = Torna al menù precendente");
-            System.out.println("1 = Smartphone");
-            System.out.println("2 = Tablet");
-            System.out.println("3 = Notebook");
-            input = in.nextInt();
-        }
-        return null;
-    }
-    public String ricercaProduttore(Scanner in) {
-        System.out.println("Inserisci il numero corrispondente al tipo di produttore che vuoi ricercare:");
-        System.out.println("0 = Esci dal programma");
-        System.out.println("1 = Samsung");
-        System.out.println("2 = Apple");
-        Integer input = in.nextInt();
-        while (!input.equals(0)) {
+                switch (input) {
+                    case 0:
+                        System.out.println("Stai per tornare al menù precedente");
+                        break;
+                    case 1:
+                        System.out.println("Questi sono gli Smartphone disponibili: ");
+                        for (Prodotto prodotto : this.listaMagazzino) {
+                            if (prodotto.getTipoProdotto() == TipoProdotto.SMARTPHONE) {
+                                System.out.println(prodotto);
+                            }
+                        }
+                        break;
+                    case 2:
+                        System.out.println("Questi sono i Tablet disponibili: ");
+                        for (Prodotto prodotto : this.listaMagazzino) {
+                            if (prodotto.getTipoProdotto() == TipoProdotto.TABLET) {
+                                System.out.println(prodotto);
+                            }
+                        }
+                        break;
+                    case 3:
+                        System.out.println("Questi sono i Notebook disponibili: ");
+                        for (Prodotto prodotto : this.listaMagazzino) {
+                            if (prodotto.getTipoProdotto() == TipoProdotto.NOTEBOOK) {
+                                System.out.println(prodotto);
+                            }
+                        }
+                        break;
+                }
+                System.out.println("Inserisci il numero corrispondente al tipo di dispositivo che vuoi ricercare:");
+                System.out.println("0 = Torna al menù precendente");
+                System.out.println("1 = Smartphone");
+                System.out.println("2 = Tablet");
+                System.out.println("3 = Notebook");
+                input = in.nextInt();
+            }
+            return null;
+        }
+        public String ricercaProduttore (Scanner in){
+            System.out.println("Inserisci il numero corrispondente al tipo di produttore che vuoi ricercare:");
+            System.out.println("0 = Esci dal programma");
+            System.out.println("1 = Samsung");
+            System.out.println("2 = Apple");
+            Integer input = in.nextInt();
+            while (!input.equals(0)) {
 
-            switch (input) {
-                case 0:
-                    System.out.println("Stai per tornare al menù precedente");
-                    break;
-                case 1:
-                    System.out.println("Questi sono i dispositivi disponibili per produttore Samsung: ");
-                    for (Prodotto prodotto : this.listaMagazzino) {
-                        if(prodotto.getProduttore() == ProduttoreProdotto.SAMSUNG){
-                            System.out.println(prodotto);
-                        }
-                    }
-                    break;
-                case 2:
-                    System.out.println("Questi sono i dispositivi disponibili per produttore Apple: ");
-                    for (Prodotto prodotto : this.listaMagazzino) {
-                        if(prodotto.getProduttore() == ProduttoreProdotto.APPLE){
-                            System.out.println(prodotto);
-                        }
-                    }
-                    break;
-            }
-            System.out.println("Inserisci il numero corrispondente al tipo di produttore che vuoi ricercare:");
-            System.out.println("0 = Esci dal programma");
-            System.out.println("1 = Samsung");
-            System.out.println("2 = Apple");
-            input = in.nextInt();
-        }
-        return null;
-    }
-    public String ricercaRangePrezzo(Scanner in) {
-        System.out.println("Inserisci il numero corrispondente alla scelta che vuoi effettuare: ");
-        System.out.println("0 = Esci dal programma");
-        System.out.println("1 = Continua con la ricerca");
-        Integer input = in.nextInt();
-        while (!input.equals(0)) {
+                switch (input) {
+                    case 0:
+                        System.out.println("Stai per tornare al menù precedente");
+                        break;
+                    case 1:
+                        System.out.println("Questi sono i dispositivi disponibili per produttore Samsung: ");
+                        for (Prodotto prodotto : this.listaMagazzino) {
+                            if (prodotto.getProduttore() == ProduttoreProdotto.SAMSUNG) {
+                                System.out.println(prodotto);
+                            }
+                        }
+                        break;
+                    case 2:
+                        System.out.println("Questi sono i dispositivi disponibili per produttore Apple: ");
+                        for (Prodotto prodotto : this.listaMagazzino) {
+                            if (prodotto.getProduttore() == ProduttoreProdotto.APPLE) {
+                                System.out.println(prodotto);
+                            }
+                        }
+                        break;
+                }
+                System.out.println("Inserisci il numero corrispondente al tipo di produttore che vuoi ricercare:");
+                System.out.println("0 = Esci dal programma");
+                System.out.println("1 = Samsung");
+                System.out.println("2 = Apple");
+                input = in.nextInt();
+            }
+            return null;
+        }
+        public String ricercaRangePrezzo (Scanner in){
+            System.out.println("Inserisci il numero corrispondente alla scelta che vuoi effettuare: ");
+            System.out.println("0 = Esci dal programma");
+            System.out.println("1 = Continua con la ricerca");
+            Integer input = in.nextInt();
+            while (!input.equals(0)) {
 
-            switch (input) {
-                case 0:
-                    System.out.println("Stai per tornare al menù precedente");
-                    break;
-                case 1:
-                    System.out.print("Inserisci il prezzo minimo (es.5,00) : ");
-                    double prezzoMin = in.nextDouble();
+                switch (input) {
+                    case 0:
+                        System.out.println("Stai per tornare al menù precedente");
+                        break;
+                    case 1:
+                        System.out.print("Inserisci il prezzo minimo (es.5,00) : ");
+                        double prezzoMin = in.nextDouble();
 
-                    System.out.print("Inserisci il prezzo massimo (es.50,00) : ");
-                    double prezzoMax = in.nextDouble();
+                        System.out.print("Inserisci il prezzo massimo (es.50,00) : ");
+                        double prezzoMax = in.nextDouble();
 
 
-                    System.out.println("Questi sono i dispositivi disponibili per il range di prezzo che hai impostato: ");
-                    for (Prodotto prodotto : this.listaMagazzino) {
-                        if (prodotto.getPriceSell() >= prezzoMin && prodotto.getPriceSell() <= prezzoMax) {
-                            System.out.println(prodotto);
-                        }
-                    }
-                    break;
-            }
-            System.out.println("Inserisci il numero corrispondente alla scelta che vuoi effettuare: ");
-            System.out.println("0 = Esci dal programma");
-            System.out.println("1 = Effettua una nuova ricerca per range di prezzo");
-            input = in.nextInt();
-        }
-        return null;
-    }
-}
+                        System.out.println("Questi sono i dispositivi disponibili per il range di prezzo che hai impostato: ");
+                        for (Prodotto prodotto : this.listaMagazzino) {
+                            if (prodotto.getPriceSell() >= prezzoMin && prodotto.getPriceSell() <= prezzoMax) {
+                                System.out.println(prodotto);
+                            }
+                        }
+                        break;
+                }
+                System.out.println("Inserisci il numero corrispondente alla scelta che vuoi effettuare: ");
+                System.out.println("0 = Esci dal programma");
+                System.out.println("1 = Effettua una nuova ricerca per range di prezzo");
+                input = in.nextInt();
+            }
+            return null;
+        }
+    }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7c236e24-bcae-4d2c-8ab0-58a4693d43c1\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/Magazzino.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Magazzino.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$/..\" value=\"develop-AzLqfM41\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"customColor\": \"\",\r\n  \"associatedIndex\": 3\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2Yr42NBp1D4Xjm8HfA1pwLBPDu4\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"develop-6parwYCL\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7c236e24-bcae-4d2c-8ab0-58a4693d43c1\" name=\"Changes\" comment=\"\" />\r\n      <created>1701270157273</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1701270157273</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -1,7 +1,12 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
   <component name="ChangeListManager">
     <list default="true" id="7c236e24-bcae-4d2c-8ab0-58a4693d43c1" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Magazzino.java" beforeDir="false" afterPath="$PROJECT_DIR$/Magazzino.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -12,15 +17,15 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$/.." value="develop-AzLqfM41" />
+        <entry key="$PROJECT_DIR$/.." value="develop-6parwYCL" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "customColor": "",
-  "associatedIndex": 3
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;customColor&quot;: &quot;&quot;,
+  &quot;associatedIndex&quot;: 3
+}</component>
   <component name="ProjectId" id="2Yr42NBp1D4Xjm8HfA1pwLBPDu4" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
@@ -30,9 +35,24 @@
   "keyToString": {
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "develop-6parwYCL"
+    "git-widget-placeholder": "develop"
   }
 }]]></component>
+  <component name="RunManager">
+    <configuration default="true" type="JetRunConfigurationType">
+      <module name="src" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
+      <module name="src" />
+      <option name="filePath" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
